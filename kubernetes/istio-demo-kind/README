

*** Install demo setup

# create cluster
kind delete cluster --name istio
kind create cluster --config configs/kind-cluster-config.yaml --name istio

# Download istio release from https://github.com/istio/istio/releases
wget https://github.com/istio/istio/releases/download/1.9.7/istio-1.9.7-linux-amd64.tar.gz
tar zxvf istio-*.tar.gz && rm istio-*.tar.gz
export PATH=$PATH:$(cd istio-*/bin; pwd)

istioctl install --set profile=demo
istioctl install --set profile=demo --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY

# edit the nodePorts for http2 and https to 80 and 443
kubectl -n istio-system patch service istio-ingressgateway --patch-file=manifest/patch-change-nodeports.yaml

# enable sidecar injection
kubectl label namespace default istio-injection=enabled

# generate certificates (https://github.com/tsaarni/certyaml/)
mkdir -p certs
certyaml --destination certs configs/certs.yaml
kubectl create -n istio-system secret tls host1-cert --cert=certs/host1.pem --key=certs/host1-key.pem --dry-run=client -o yaml | kubectl apply -f -

# install echoserver
kubectl apply -f manifests/echoserver-without-tls.yaml

# test that the service can be accessed
http http://host1.127-0-0-111.nip.io/
http --verify=certs/external-ca.pem https://host1.127-0-0-111.nip.io/






*** Commands

istioctl profile list                    # list all profiles
istioctl install --set profile=[name]    # install with a profile config
istioctl profile dump minimal            # dump configuration for a profile

kubectl -n istio-system get istiooperator installed-state -o yaml   # dump current profile



*** Misc



kubectl create ns outside-mesh
kubectl -n outside-mesh apply -f manifests/shell.yaml
kubectl -n outside-mesh exec -it shell-7567c49b6b-g9n5m -- ash


http http://echoserver.default
openssl s_client -connect echoserver.default:80|openssl x509 -text -noout



mkdir certs
rm certs/*
kubectl -n istio-system get secret istio-ca-secret -o jsonpath='{..ca-cert\.pem}' | base64 -d > certs/ca-cert.pem
kubectl -n istio-system get secret istio-ca-secret -o jsonpath='{..ca-key\.pem}' | base64 -d > certs/ca-cert-key.pem

certyaml --destination certs/ configs/certs.yaml


kubectl -n outside-mesh create secret tls client-cert --cert=certs/client.pem --key=certs/client-key.pem --dry-run=client -o yaml | kubectl apply -f -
kubectl -n outside-mesh create secret generic ca-cert --from-file=cacert.pem=certs/ca-cert.pem --dry-run=client -o yaml | kubectl apply -f -


http --cert /run/secrets/certs/tls.crt --cert-key /run/secrets/certs/tls.key --verify /run/secrets/ca/cacert.pem https://echoserver.default:80

http: error: SSLError: HTTPSConnectionPool(host='echoserver.default', port=80): Max retries exceeded with url: / (Caused by SSLError(SSLCertVerificationError('no appropriate commonName or subjectAltName fields were found'))) while doing a GET request to URL: https://echoserver.default:80/

echo -e "GET / HTTP/1.0\r\n" | openssl s_client -cert /run/secrets/certs/tls.crt -key /run/secrets/certs/tls.key -CAfile /run/secrets/ca/cacert.pem -connect echoserver.default:80





printf "GET / HTTP/1.1\nHost: echoserver\n\nQ\n" | openssl s_client -cert /run/secrets/certs/tls.crt -key /run/secrets/certs/tls.key -CAfile /run/secrets/ca
/cacert.pem -connect echoserver.default:80 -quiet





kubectl apply -f manifests/shell-without-sidecar.yaml

kubectl exec -it shell-5cff55fb67-ddwf2 -- http http://istiod.istio-system:15014/metrics

kubectl get pod echoserver-without-tls-5c59bf4694-m92mp -o yaml|grep podIP:
kubectl exec -it shell-5cff55fb67-ddwf2 -- http http://10.244.1.4:15020/stats/prometheus
kubectl exec -it shell-5cff55fb67-ddwf2 -- http http://10.244.1.4:15021/healthz/ready
kubectl exec -it shell-5cff55fb67-ddwf2 -- http http://10.244.1.4:15090/stats/prometheus







make docker.pilot
docker tag istio/pilot:$(git show -s --format=%H) istio/pilot:latest
kind load docker-image --name istio istio/pilot:latest

cat <<EOF | kubectl -n istio-system patch deployment istiod --patch-file=/dev/stdin
spec:
  template:
    spec:
      containers:
      - name: discovery
        image: istio/pilot:latest
        imagePullPolicy: Never
EOF

kubectl -n istio-system rollout restart deployment/istiod




---

kubectl -n istio-system port-forward deployment/istio-ingressgateway 15000
http localhost:15000/config_dump | jq -C . | less



