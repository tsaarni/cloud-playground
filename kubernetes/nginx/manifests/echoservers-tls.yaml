apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver-1
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver-1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver-1
    spec:
      containers:
      - name: echoserver
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20201006-42d00bd
        env:
        - name: TLS_SERVER_CERT
          value: /run/secrets/certs/tls.crt
        - name: TLS_SERVER_PRIVKEY
          value: /run/secrets/certs/tls.key
        - name: TLS_CLIENT_CACERTS
          value: /run/secrets/certs/ca.crt
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http-api
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /health
            port: 3000 
        volumeMounts:
          - mountPath: /run/secrets/certs/
            name: certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: echoserver-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver-2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver-2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver-2
    spec:
      containers:
      - name: conformance-echo
        image: gcr.io/k8s-staging-ingressconformance/echoserver:v20201006-42d00bd
        env:
        - name: TLS_SERVER_CERT
          value: /run/secrets/certs/tls.crt
        - name: TLS_SERVER_PRIVKEY
          value: /run/secrets/certs/tls.key
        - name: TLS_CLIENT_CACERTS
          value: /run/secrets/certs/ca.crt
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http-api
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
        volumeMounts:
          - mountPath: /run/secrets/certs/
            name: certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: echoserver-2
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver-1
spec:
  ports:
  - name: http
    port: 80
    targetPort: http-api
  selector:
    app.kubernetes.io/name: echoserver-1
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver-2
spec:
  ports:
  - name: http
    port: 80
    targetPort: http-api
  selector:
    app.kubernetes.io/name: echoserver-2
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: multiple-paths
spec:
  rules:
  - host: ingress.127-0-0-133.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echoserver-1
            port:
              number: 80
      - path: /subpage
        pathType: Prefix
        backend:
          service:
            name: echoserver-2
            port:
              number: 80
