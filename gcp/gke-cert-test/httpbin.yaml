
# Create namespace `inside-mesh` and enable automatic Istio sidecar
# injection for pods deployed in this namespace
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: inside-mesh


# Create mesh-wide policy to allow only mutual TLS connections.
# Note that MeshPolicy is not namespaced resource
---
apiVersion: "authentication.istio.io/v1alpha1"
kind: "MeshPolicy"
metadata:
  name: "default"
spec:
  peers:
  - mtls: {}


# Traffic destined to *.local (any service within the cluster) will be
# put into mutually authenticated TLS pipe managed by Istio.
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: default
  namespace: inside-mesh
spec:
  host: "*.local" # any service running within cluster
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  namespace: inside-mesh
  labels:
    app: httpbin
spec:
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - name: httpbin
        image: gcr.io/<GCP_PROJECT_ID>/httpbin:1
        ports:
          - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: inside-mesh
  labels:
    app: httpbin
spec:
  ports:
  - name: http
    port: 80
  selector:
    app: httpbin

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: mygateway
  namespace: inside-mesh
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE  # terminate TLS in gateway but use only server authentication

      # istio-ingressgateway pod mounts a certificate and key from Secret
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
    hosts:
    - "*"

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
  namespace: inside-mesh
spec:
  hosts:
  - "kube.example.com"
  gateways:
  - mygateway
  http:
  - route:
    - destination:
        port:
          number: 80
        host: httpbin.inside-mesh.svc.cluster.local


